<template>
    <div class="title">订单详情</div>
    <x-card :cardStyle="{ 'height': 'auto' }">
        <div class="audit">
            <span class="audit-title">审核详情</span>
            <el-tag v-if="status" :type="['warning', 'warning', 'success', 'danger'][status]">{{ ["待审核", "待审核",
                "已通过", "未通过"
            ][status] }}</el-tag>
        </div>
        <div v-if="isShow" class="exception" v-for="items in orderDetails.checkDetail" :key="items.name">
            <div class="exception-title">{{ items.label }}</div>
            <div class="items" v-if="items.label === '异常项'">
                <el-tag color="#0022991A" v-for="(items, index) in items.datas" :key="index">{{ items }}</el-tag>
            </div>
            <div class="items" v-else>
                <span>{{ items.datas }}</span>
            </div>
        </div>
    </x-card>
    <x-card title="通用信息" :cardStyle="{ 'height': 'auto' }" :titleStyle="{ 'color': 'rgba(0, 0, 0, 0.8)' }">
        <div class="generalInfo">
            <x-component v-for="items in orderDetails.general" :key="items.name" :label="items.label" :width="'15%'"
                :titleStyle="'#484848'" :marginBottom="'16px'">
                <div class="value">{{ items.datas }}</div>
            </x-component>
        </div>
    </x-card>
    <x-card title="小卡信息" :cardStyle="{ 'height': 'auto' }" :titleStyle="{ 'color': 'rgba(0, 0, 0, 0.8)' }">
        <div class="generalInfo">
            <x-component v-for="items in orderDetails.smallCard" :key="items.name" :label="items.label" :width="'15%'"
                :titleStyle="'#484848'" :marginBottom="'16px'">
                <div class="value">{{ items.datas }}</div>
            </x-component>
        </div>
    </x-card>
</template>

<script setup>
import XCard from '../../../components/container/XCard.vue';
import XComponent from '../../../components/container/XComponent.vue';
import { onMounted, ref, reactive, watch } from 'vue';
import OpenCardService from '../../../services/OpenCardService';
import { checkDetail, general, smallCard } from '@/config/orderCordDatas'

const serviceClass = new OpenCardService();
const status = ref('')
const isShow = ref(false)
const orderDetails = reactive({
    checkDetail: reactive(checkDetail.map(item => ({ ...item, datas: null }))),
    general: reactive(general.map(item => ({ ...item, datas: null }))),
    smallCard: reactive(smallCard.map(item => ({ ...item, datas: null })))
})

onMounted(() => {
    let id = JSON.parse(localStorage.getItem('orderDetails'));
    id = id.id
    servicesHandle(id)
})

const servicesHandle = (id) => {
    serviceClass.GetDetails(id).then(res => {
        delete res.data.id
        dataClear(res.data)
    })
}

const dataClear = (res) => {
    if (res.checkDetail) {
        status.value = res.checkDetail.checkStatus
        if (status.value !== '0') {
            isShow.value = true
        }
    }
    Object.keys(orderDetails).forEach(key => {
        orderDetails[key].forEach(item => {
            item.datas = res[key][item.name];
            if (item.datas == null || item.datas == '') {
                item.datas = '无'
            } else if (item.datas == 'CNY') {
                item.datas = '¥'
            } else if (item.datas == 'USD') {
                item.datas = '$'
            } else {
                item.datas = String(item.datas).includes(',') ? item.datas.split(',') : item.datas;

            }
        });
    });
}
</script>

<style lang="scss" scoped>
.title {
    margin-bottom: 20px;
    color: rgba(0, 0, 0, 0.80);
    font-family: "Helvetica Neue";
    font-size: 24px;
    font-weight: 700;
}

.el-tag {
    padding: 4px 16px;
}

.audit {
    display: flex;
    align-items: center;
    gap: 18px;
    margin-bottom: 18px;

    .audit-title {
        color: rgba(0, 0, 0, 0.80);
        text-align: center;
        font-family: "Helvetica Neue";
        font-size: 24px;
        font-weight: 700;
    }
}

.exception {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 8px;
    font-family: "Helvetica Neue";
    font-size: 12px;
    font-weight: 700;
    color: var(--Grey-70, #484848);
    margin-bottom: 18px;

    .items {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;

        .el-tag__content {
            font-family: "Helvetica Neue";
            font-size: 12px;
        }

        >span {
            font-weight: 400;
        }
    }



    &:last-child {
        margin-bottom: 0;
    }
}

.generalInfo {
    display: flex;
    justify-content: flex-start;
    flex-wrap: wrap;
    column-gap: 30px;

    .value {
        color: rgba(0, 0, 0, 0.80);
        font-family: "Helvetica Neue";
        font-size: 12px;
        overflow: hidden; //超出的文本隐藏
        text-overflow: ellipsis; //溢出用省略号显示
        white-space: nowrap; //溢出不换行
    }
}

.prize-card {
    .prize-title {
        height: 30px;
        line-height: 30px;
        padding-left: 10px;
        box-sizing: border-box;
        background: rgba(0, 34, 153, 0.04);
        color: #029;
        font-family: "Helvetica Neue";
        font-size: 14px;
        font-weight: 700;
        /* margin-bottom: 16px; */
    }

    .item {

        /* background-color: red; */
        &:not(:first-child) {
            padding-top: 16px;
            border-top: 1px solid #f0f0f0;
        }

        &:not(:last-child) {
            padding-bottom: 16px;
        }

        .item-title {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 16px;

            .dot {
                width: 6px;
                height: 6px;
                background: #4D64B8;
            }

            span {
                color: #666;
                font-family: "Helvetica Neue";
                font-size: 12px;
                font-weight: 700;
            }
        }
    }
}
</style>